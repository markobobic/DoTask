@model DoTask.VievModels.AssignmentViewModel
@{ Layout = null; }

    <head>
        <link href="~/Content/SwitchButton.css" rel="stylesheet" />
        <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    </head>
@using (Html.BeginForm("Add", "Assignment", FormMethod.Post, new { onsubmit = "return SubmitForm(this)",@id="myForm" }))
{
@Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(model => model.AssigmentName, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="row">
            @Html.EditorFor(model => model.AssigmentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AssigmentName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="row">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
            @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
        </div>
    </div>
    
   <div class="form-group">
        @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="row">
            @Html.EditorFor(model => model.Deadline, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
            @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
        </div>
    </div>
   
    <div class="form-group">
        @Html.LabelFor(model => model.Progress, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="row">
            <input class="form-control" data-val="true" data-val-number="The field Progress must be a number." 
                   data-val-required="The Progress field is required." id="Progress" name="Progress"
                   readonly="readonly" type="text" value="0"></div>
    </div>
    <p id="assignTo" class="h4 text-center">Assign To:</p>
    <div class="form-inline text-center">
     
        <div class="form-group">
            <h4>Developer</h4>
            <label class="switch" style="margin:0px;">
                <input id="toDeveloper" name="toDeveloper" type="checkbox" value="false" class="switch-input">
                <span class="switch-label" data-on="" data-off=""></span>
                <span class="switch-handle"></span>
            </label>
        </div>
        <div class="form-group">
            <h4>Project Manager</h4>
            <label class="switch" style="margin:0px;">
                <input id="toProjectManager" name="toProjectManager" type="checkbox" value="false" class="switch-input">
                <span class="switch-label" data-on="" data-off=""></span>
                <span class="switch-handle"></span>
            </label>
           
        </div>
        
    </div>
    <p id="errorSwitch" class="errorTxt text-danger"></p>

    <div class="form-group" id="dropdownDeveloper">
        <label class="control-label col-md-6" for="DeveloperId">Developers</label>        
        <div class="row">
            @Html.DropDownList("DeveloperId", (IEnumerable<SelectListItem>)ViewBag.Developers,null, new { @class = "form-control",@id="developers" })
        </div>
    </div>
    <div class="form-group" id="dropdownProjectManager">
        <div class="row">
            <label class="control-label col-md-6" for="ProjectManagerId">Project Manager</label>
            <select class="form-control" id="projectManagers" name="ProjectManagerId">
                <option selected="selected">None</option>
            </select>
        </div>
      </div>
      
       <div class="form-group" id="dropDownProjectsForDeveloper">
        <label class="control-label col-md-6" for="ProjectId">Projects</label>        
        <div class="texte-center row">
            @Html.DropDownList("ProjectId", (IEnumerable<SelectListItem>)ViewBag.Projects, null, new { @class = "form-control",@id="projectsForDeveloper" })
        </div>
         </div>

    <div class="form-group">
        <label class="control-label col-md-6" for="StatusId">Status</label>        
        <div class="texte-center row">
            @Html.DropDownList("StatusId", (IEnumerable<SelectListItem>)ViewBag.Statuses, null, new { @class = "form-control" })
        </div>
    </div>
     <div class="form-group" id="dropdDownForProjectManager">
        <div class="row">
            <label for="ProjectId">Projects</label>
            <select class="form-control" id="projects" name="ProjectId">

            </select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="row">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 5, id = "description" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="user_content"></div>
        <div class="form-group">
            <div class="text-center">
                <input type="submit" id="formSubmit" class="btn btn-success" value="Save" />
                <button type="button" class="btn btn-default" data-dismiss="modal" aria-label="Close">Cancel</button>
            </div>
        </div>                  

                                
  }

    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Scripts/moment.min.js"></script>

    <script>
        $("#dropdownDeveloper").hide();
        $("#dropdownProjectManager").hide();
        $("#dropDownProjectsForDeveloper").hide();
        $("#dropdDownForProjectManager").hide();
        $("#developers").prop('disabled', true);
        $("#projectManagers").prop('disabled', true);
        $('#toDeveloper').click(function () {
            let checking = $(this).prop("checked");
          
            if (checking === true) {
                $("#toProjectManager").prop('disabled', true);
                $('#errorSwitch').hide();
                $("#dropdDownForProjectManager").hide();
                $("#dropdownDeveloper").show();
                $("#dropDownProjectsForDeveloper").show();
                $("#developers").prop('disabled', false);
            } else if (checking === false) {
                $('#errorSwitch').hide();
                $("#toProjectManager").prop('disabled',false);
                $("#dropdownDeveloper").hide();
                $("#developers").prop('disabled', true);
             
            }
        });
        $('#toProjectManager').click(function () {
            let checking = $(this).prop("checked");
            if (checking === true) {
                $('#errorSwitch').hide();
                $("#toDeveloper").prop('disabled', true);
                $("#dropdDownForProjectManager").show();
                $("#dropDownProjectsForDeveloper").hide();
                $("#dropdownProjectManager").show();
                $("#projectManagers").prop('disabled', false);
                $("#projectsForDeveloper").prop('disabled', true);
               
                
            } else if (checking === false) {
                $('#errorSwitch').hide();
                $("#toDeveloper").prop('disabled', false);
                $("#dropdownProjectManager").hide();
                $("#projectsForDeveloper").prop('disabled', false);
            }
        });
        
        $(document).ready(function () {

            $('#myForm').validate({ 
                rules: {
                    'toDeveloper': {
                        required: true,
                        maxlength: 2
                    },
                }, 
                messages: {
                    'toDeveloper': {
                        required: "Check at least 1 box",
                        maxlength: "Check no more than {0} boxes",

                    },
                   

                },
                errorElement: 'p',
                errorLabelContainer: '.errorTxt',
              
                submitHandler: function (form) { // for demo
                    alert('valid form submitted'); // for demo
                   
                }

            });
            

        });

        $(function () {
            $('.datetimepicker').datetimepicker({
                format: 'YYYY-MM-DD'
            });

            $('.datetimepicker-addon').on('click', function () {
                $(this).prev('input.datetimepicker').data('DateTimePicker').toggle();
            });
        });


        $(document).ready(function () {
            $.getJSON('/Assignment/GetProjectManager', null, function (data) {
                $.each(data, function () {
                    $('#projectManagers').append('<option value=' +
                        this.Id + '>' + this.Name + '</option>');
                });
                $.getJSON('/Assignment/GetProjects', { projectManagerId: $('#projectManagers').val() }, function (data) {
                    $.each(data, function () {
                        $('#projects').append('<option value=' +
                            this.ProjectId + '>' + this.Name + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    //alert('Error getting client sectors!');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting projects!');
            });

            $('#projectManagers').change(function () {
                $('#projects option').remove();
                $.getJSON('/Assignment/GetProjects', { projectManagerId: $('#projectManagers').val() }, function (data) {
                    $.each(data, function () {
                        $('#projects').append('<option value=' +
                            this.ProjectId + '>' + this.Name + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting project managers!');
                });
            });
        });
        

    </script>
    
    
   

  <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"
            type="text/javascript">
    </script>

    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"
            type="text/javascript">
    </script>


<style>
    .form-control{
        margin-left:3%;
    }
    #assignTo{
        font-weight:bold;
    }

    #errorSwitch{
        
        margin-top:-2%;
    }
</style>


